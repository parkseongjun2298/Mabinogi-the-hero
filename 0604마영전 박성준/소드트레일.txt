Sword - 스테틱 매쉬

콜라이더의 min, max

Ready
{
mid = (min + max) / 2.f

_vec3 m_vTop, m_vBottom; (클래스의 멤버변수)
m_vTop = mid;
m_vTop.y += (min + max).y / 2.f
m_vBottom = mid
m_vTop.y += (min + max).y / 4.f
}

Render
{
list<_vec3> m_lstVec;
_vec3 vTop, vBottom;
D3DXVec3TransformCoord(&vTop, &m_vTop, &m_pTransform->m_matWorld);
D3DXVec3TransformCoord(&vBottom, &m_vBottom, &m_pTransform->m_matWorld);
m_lstVec.push_back(vTop);
m_lstVec.push_back(vBottom);

소드 메쉬출력

Engine::TRAILVTX vertex[10];
for(int i = 0; i < 10 / 2; ++i)
{
vertex[2 * i].vTexUV = { ((10 / 2.f - i) / (10 / 2 - 1.f)), 0.f };
vertex[(2 * i) + 1].vTexUV = { ((10 / 2.f - i) / (10 / 2 - 1.f)), 1.f };
}

int iIdx = 0;
for(auto& iter = m_lstVec.rbegin(); iter != m_lstVec.rend(); ++iter)
{
vertex[iIdx].vPosition = *iter;
++iIdx;
if(iIdx >= 10)
	break;
}

_matrix matWorld;
D3DXMatrixIdentity(&matWorld);
m_pGraphicDev->SetTransform(matWorld);
m_pGraphicDev->SetRenderState(D3DRS_CULLMODE, D3DCULL_NONE);

pEffect = m_pSwordTrailShaderCom->Get_EffectHandle();
NULL_CHECK(pEffect);

iPassMax = 0;
FAILED_CHECK_RETURN(SetUp_SwordTrailConstantTable(pEffect), );

pEffect->Begin(&iPassMax, 0);
pEffect->BeginPass(0);

m_pGraphicDev->SetFVF(Engine::FVF_TRAIL);
m_pGraphicDev->DrawPrimitiveUP(D3DPT_TRIANGLESTRIP, 10 - 2, vertex, sizeof(Engine::TRIALVTX));
pEffect->EndPass();
pEffect->End();

m_pGraphicDev->SetRenderState(D3DRS_CULLMODE, D3DCULL_CCW);
}